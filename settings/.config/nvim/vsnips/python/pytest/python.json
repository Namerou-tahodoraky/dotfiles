{
    "[pytest]simple test.": {
        "prefix": ["pytest_simple"],
        "scope": ["python"],
        "body": [
            "def test_${2}():",
            "    from ${1} import ${2}",
            "    assert ${2}() == ${3}",
            "$0"
        ],
        "description": "[pytest]simple test."
    },
    "[pytest]fixture.": {
        "prefix": ["pytest_fixture"],
        "scope": ["python"],
        "body": [
            "@pytest.fixture(${1| ,scope=\"class\",scope=\"module\",scope=\"session\"|},${2| , param=\"aaa\"|})",
            "$0"
        ],
        "description": "[pytest]fixture."
    },
    "[pytest]2params test.": {
        "prefix": ["pytest_2params"],
        "scope": ["python"],
        "body": [
            "@pytest.mark.parametrize([\"${3:param1}\", \"${4:result}\"], [(), ()])",
            "def test_${2}(${3}, ${4}):",
            "    from ${1} import ${2}",
            "    assert ${2}(${3}) == ${4}",
            "$0"
        ],
        "description": "[pytest]2params test."
    },
    "[pytest]3params test.": {
        "prefix": ["pytest_3params"],
        "scope": ["python"],
        "body": [
            "@pytest.mark.parametrize([\"${3:param1}\", \"${4:param2}\", \"${5:result}\"], [(), ()])",
            "def test_${2}(${3}, ${4}, ${5}):",
            "    from ${1} import ${2}",
            "    assert ${2}(${3}, ${4}) == ${5}",
            "$0"
        ],
        "description": "[pytest]3params test."
    },
    "[pytest]4params test.": {
        "prefix": ["pytest_4params"],
        "scope": ["python"],
        "body": [
            "@pytest.mark.parametrize([\"${3:param1}\", \"${4:param2}\", \"${5:param3}\", \"${6:result}\"], [(), ()])",
            "def test_${2}(${3}, ${4}, ${5}, ${6}):",
            "    from ${1} import ${2}",
            "    assert ${2}(${3}, ${4}, ${5}) == ${6}",
            "$0"
        ],
        "description": "[pytest]4params test."
    },
    "[pytest]5params test.": {
        "prefix": ["pytest_5params"],
        "scope": ["python"],
        "body": [
            "@pytest.mark.parametrize([\"${3:param1}\", \"${4:param2}\", \"${5:param3}\", \"${6:param4}\", \"${7:result}\"], [(), ()])",
            "def test_${2}(${3}, ${4}, ${5}, ${6}, ${7}):",
            "    from ${1} import ${2}",
            "    assert ${2}(${3}, ${4}, ${5}, ${6}) == ${7}",
            "$0"
        ],
        "description": "[pytest]5params test."
    },
    "[pytest].": {
        "prefix": ["pytest_"],
        "scope": ["python"],
        "body": [
            "",
            "def test_${2}(${3}, ${4}):",
            "    from ${1} import ${2}",
            "    assert ${2}(${3}) == ${4}",
            "$0"
        ],
        "description": "[pytest]."
    },

    "_____EOF______": {
        "prefix": "",
        "body": "",
        "description": "EOF"
    }
} 
